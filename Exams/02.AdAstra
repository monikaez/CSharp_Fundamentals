using System;
using System.Text.RegularExpressions;

namespace _02.AdAstra
{
    internal class Program
    {
        static void Main(string[] args)
        {
            //([#|])(?<item>[A-Za-z\s]+)(\1)(?<data>[0-9]{2}\/[0-9]{2}\/[0-9]{2})(\1)(?<calories>[0-9]+)(\1)
            string pattern = @"([#|])(?<item>[A-Za-z\s]+)(\1)(?<data>[0-9]{2}\/[0-9]{2}\/[0-9]{2})(\1)(?<calories>[0-9]+)(\1)";
            string input = Console.ReadLine();

            MatchCollection matches = Regex.Matches(input, pattern);
            int totalCalories = 0;

            foreach (Match match in matches)
            {
                totalCalories += int.Parse(match.Groups["calories"].Value);
            }
            Console.WriteLine($"You have food to last you for: {totalCalories/2000} days!");

            foreach (Match match in matches)
            {
                Console.WriteLine($"Item: {match.Groups["item"].Value}, Best before: {match.Groups["data"].Value}, Nutrition: {match.Groups["calories"].Value}");
            }
        }
    }
}
